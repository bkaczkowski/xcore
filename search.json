[{"path":"/articles/xcore_vignette.html","id":"gene-expression-modeling-in-context-of-rinderpest-infection","dir":"Articles","previous_headings":"","what":"Gene expression modeling in context of rinderpest infection","title":"xcore vignette","text":"use subset 293SLAM rinderpest infection dataset FANTOM5. subset contains expression counts 0, 12 24 hours post infection samples subset FANTOM5 promoters. can find example data shipped xcore package. First need construct design matrix describing experiment design. Next, need preprocess counts using prepareCountsForRegression function. , CAGE expression tags sample filtered lowly expressed promoters, normalized library size transformed counts per million (CPM). Finally, CPM log2 transformed addition pseudo count 1. Moreover, designate base level samples, 0 hours treatment example, basal expression level calculated. basal level used reference modeling expression changes. xcore models expression function molecular signatures. signatures can constructed eg. known transcription factor binding sites (see Constructing molecular signatures section). , take advantage pre-computed molecular signatures found xcoredata package. Particularly, molecular signatures constructed ReMap2020 FANTOM5 annotation. Molecular signature simple binary matrix indicating transcription factor binding site found promoter vicinity. add signatures MultiAssayExperiment object can use addSignatures function. add signatures remember give unique names. examine newly added signatures, can see overlap promoters. side, depending signatures quality, expect see signatures overlap promoters. , provide detailed guidelines signatures filtering, filtering least signatures overlapping promoters mandatory. , filter signatures overlap less 5% 95% promoters using filterSignatures function. Finally, can run expression modeling using modelGeneExpression function. modelGeneExpression can take advantage parallelization speedup calculations, use need register parallel backend. modeling inherently contain level randomness due using cross validation, set seed results can replicated. step time consuming need train separate model samples. speed calculations lower number folds used cross-validation procedure 10 5 using nfolds argument, internally passed cv.glmnet function. Using 6 cores Intel(R) Xeon(R) CPU E5-2680 v3 calculations took around 4 minutes compute used 25 GB RAM. needed memory requirement brought using lower number cores. Output returned modelGeneExpression list following elements: regression_models - list holding cv.glmnet objects sample. pvalues - list data.frames sample, holding signatures estimates, estimated standard errors p-values. replicate_avg - matrix holding replicate average Z-scores columns corresponding groups design. likely main output users. Let’s look replicate_avg matrix.  Among others, analysis indicates RELA IRF9 top transcription factor associated observed changes expression. transcription factors known play role measles infection, closely related rinderpest (KEGG Measles pathway). Moreover, Z-score sign indicate promoters targeted RELA tend downregulated, targeted IRF9 tend upregulated.","code":"head(rinderpest_mini) ##                                              00hr_rep1 00hr_rep2 00hr_rep3 ## hg19::chr1:10003372..10003465,-;hg_10258.1          52        46        57 ## hg19::chr1:10003486..10003551,+;hg_541.1            39        42        27 ## hg19::chr1:100111580..100111773,+;hg_4181.1          1         0         2 ## hg19::chr1:100232177..100232198,-;hg_13495.1        15         9        26 ## hg19::chr1:100315613..100315691,+;hg_4187.1         95       109       110 ## hg19::chr1:100435545..100435597,+;hg_4201.1        141       129       101 ##                                              12hr_rep1 12hr_rep2 12hr_rep3 ## hg19::chr1:10003372..10003465,-;hg_10258.1          54        50        53 ## hg19::chr1:10003486..10003551,+;hg_541.1            35        30        40 ## hg19::chr1:100111580..100111773,+;hg_4181.1          1         2         3 ## hg19::chr1:100232177..100232198,-;hg_13495.1        20        16        13 ## hg19::chr1:100315613..100315691,+;hg_4187.1        112        94       103 ## hg19::chr1:100435545..100435597,+;hg_4201.1        132       106       125 ##                                              24hr_rep1 24hr_rep2 24hr_rep3 ## hg19::chr1:10003372..10003465,-;hg_10258.1          11        12        12 ## hg19::chr1:10003486..10003551,+;hg_541.1            22        34        50 ## hg19::chr1:100111580..100111773,+;hg_4181.1          0         1         1 ## hg19::chr1:100232177..100232198,-;hg_13495.1         7        13        10 ## hg19::chr1:100315613..100315691,+;hg_4187.1         43        74        89 ## hg19::chr1:100435545..100435597,+;hg_4201.1         84       100       121 design <- matrix(   data = c(1, 0, 0,            1, 0, 0,            1, 0, 0,            0, 1, 0,            0, 1, 0,            0, 1, 0,            0, 0, 1,            0, 0, 1,            0, 0, 1),   ncol = 3,   nrow = 9,   byrow = TRUE,   dimnames = list(     c(       \"00hr_rep1\",       \"00hr_rep2\",       \"00hr_rep3\",       \"12hr_rep1\",       \"12hr_rep2\",       \"12hr_rep3\",       \"24hr_rep1\",       \"24hr_rep2\",       \"24hr_rep3\"     ),     c(\"00hr\", \"12hr\", \"24hr\")   ) )  print(design) ##           00hr 12hr 24hr ## 00hr_rep1    1    0    0 ## 00hr_rep2    1    0    0 ## 00hr_rep3    1    0    0 ## 12hr_rep1    0    1    0 ## 12hr_rep2    0    1    0 ## 12hr_rep3    0    1    0 ## 24hr_rep1    0    0    1 ## 24hr_rep2    0    0    1 ## 24hr_rep3    0    0    1 mae <- prepareCountsForRegression(counts = rinderpest_mini,                                   design = design,                                   base_lvl = \"00hr\") data(remap_promoters, package = \"xcoredata\") print(remap_promoters[1:3, 1:3]) ## 3 x 3 sparse Matrix of class \"dgCMatrix\" ##                                            ENCSR000AHD.CTCF.MCF-7 ## hg19::chr1:10003314..10003321,-;hg_10256.1                      1 ## hg19::chr1:10003348..10003362,-;hg_10257.1                      1 ## hg19::chr1:10003372..10003465,-;hg_10258.1                      1 ##                                            ENCSR000AHF.TAF1.MCF-7 ## hg19::chr1:10003314..10003321,-;hg_10256.1                      1 ## hg19::chr1:10003348..10003362,-;hg_10257.1                      1 ## hg19::chr1:10003372..10003465,-;hg_10258.1                      1 ##                                            ENCSR000AKB.CTCF.GM12878 ## hg19::chr1:10003314..10003321,-;hg_10256.1                        . ## hg19::chr1:10003348..10003362,-;hg_10257.1                        . ## hg19::chr1:10003372..10003465,-;hg_10258.1                        . mae <- addSignatures(mae, remap = remap_promoters) summary(colSums(mae[[\"remap\"]])) ##    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.  ##     0.0   272.2  1828.5  3008.1  5208.0 10224.0 mae <- filterSignatures(mae, min = 0.05, max = 0.95) # register parallel backend, for R package it might be not possible to use more than 2 cores in its vignette doMC::registerDoMC(cores = 2L)  # set seed set.seed(314159265)  res <- modelGeneExpression(   mae = mae,   xnames = \"remap\",   nfolds = 5) out <- res$replicate_avg$remap ord <- order(abs(out[, \"24hr\"]), decreasing = TRUE) pheatmap::pheatmap(   mat = head(out[ord, ]),   cluster_cols = FALSE,   main = \"SLAM293 signatures Z-score\" )"},{"path":"/articles/xcore_vignette.html","id":"constructing-molecular-signatures","dir":"Articles","previous_headings":"","what":"Constructing molecular signatures","title":"xcore vignette","text":"Constructing molecular signatures simple intersecting promoters annotation TFBS. example downloaded Motevo predictions binding sites SwissRegulon website. file GFF format can read using rtracklayer::import. read R get GRanges object. purposes required TF/motif name held name column. Next construct molecular signatures matrix using FANTOM5 annotation found xcoredata package. done using getInteractionMatrix function, can specify ext parameter control much promoters extended directions intersecting binding data.","code":"# obtain binding sites motevo_hg38_f5 <- rtracklayer::import(   con = \"https://swissregulon.unibas.ch/data/hg38_f5/hg38_sites_v1.gff.gz\" )  # TF / motif name must be stored as 'name' motevo_hg38_f5$name <- motevo_hg38_f5$Motif  # obtain promoters annotation, *promoter name must be stored as 'name' data(\"promoters_f5\", package = \"xcoredata\")  # construct molecular signatures matrix molecular_signature <- getInteractionMatrix(   a = promoters_f5,   b = motevo_hg38_f5,   ext = 500 )"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Maciej Migdał. Author, maintainer. Bogumił Kaczkowski. Author.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Migdał M, Kaczkowski B (2021). xcore: xcore gene expression modeling framework. R package version 0.0.0.9000.","code":"@Manual{,   title = {xcore: xcore gene expression modeling framework},   author = {Maciej Migdał and Bogumił Kaczkowski},   year = {2021},   note = {R package version 0.0.0.9000}, }"},{"path":[]},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"xcore gene expression modeling framework","text":"can install developmental version xcore github :","code":"devtools::install_github(\"bkaczkowski/xcore\")"},{"path":"/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"xcore gene expression modeling framework","text":"vignette showing xcore basic usage available .","code":""},{"path":"/reference/addSignatures.html","id":null,"dir":"Reference","previous_headings":"","what":"Add molecular signatures to MultiAssayExperiment — addSignatures","title":"Add molecular signatures to MultiAssayExperiment — addSignatures","text":"addSignatures extends mae adding new experiments. Rows consistency ensured taking intersection rows new experiments added.","code":""},{"path":"/reference/addSignatures.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add molecular signatures to MultiAssayExperiment — addSignatures","text":"","code":"addSignatures(mae, ..., intersect_rows = TRUE)"},{"path":"/reference/addSignatures.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add molecular signatures to MultiAssayExperiment — addSignatures","text":"mae MultiAssayExperiment object. ... named experiments added mae. intersect_rows logical flag indicating common rows across experiments included. set FALSE know .","code":""},{"path":"/reference/addSignatures.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add molecular signatures to MultiAssayExperiment — addSignatures","text":"MultiAssayExperiment object new experiments added.","code":""},{"path":"/reference/addSignatures.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add molecular signatures to MultiAssayExperiment — addSignatures","text":"","code":"base_lvl <- \"00hr\" design <- matrix(   data = c(1, 0, 0,            1, 0, 0,            1, 0, 0,            0, 1, 0,            0, 1, 0,            0, 1, 0,            0, 0, 1,            0, 0, 1,            0, 0, 1),   ncol = 3,   nrow = 9,   byrow = TRUE,   dimnames = list(colnames(rinderpest_mini), c(\"00hr\", \"12hr\", \"24hr\"))) mae <- prepareCountsForRegression(   counts = rinderpest_mini,   design = design,   base_lvl = base_lvl) mae <- addSignatures(mae, remap = remap_mini)"},{"path":"/reference/applyOverColumnGroups.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply function over groups of columns — applyOverColumnGroups","title":"Apply function over groups of columns — applyOverColumnGroups","text":"Returns array obtained applying function rows submatrices input matrix, submatrices divided specified groups columns.","code":""},{"path":"/reference/applyOverColumnGroups.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply function over groups of columns — applyOverColumnGroups","text":"","code":"applyOverColumnGroups(mat, groups, f, ...)"},{"path":"/reference/applyOverColumnGroups.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply function over groups of columns — applyOverColumnGroups","text":"mat matrix. groups vector giving columns grouping. f function applied. ... optional arguments f.","code":""},{"path":"/reference/applyOverColumnGroups.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply function over groups of columns — applyOverColumnGroups","text":"matrix dimensions nrow(mat) x nlevels(groups).","code":""},{"path":"/reference/applyOverDFList.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply function over selected column in list of data frames — applyOverDFList","title":"Apply function over selected column in list of data frames — applyOverDFList","text":"applyOverDFList operates list data frames data frames size columns. Column interest extracted data frame column binded groups, next fun applied rows. Final result matrix result group separate column. Function parallelized groups.","code":""},{"path":"/reference/applyOverDFList.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply function over selected column in list of data frames — applyOverDFList","text":"","code":"applyOverDFList(list_of_df, col_name, fun, groups)"},{"path":"/reference/applyOverDFList.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply function over selected column in list of data frames — applyOverDFList","text":"list_of_df list data.frames. col_name string specifying column data.frames apply fun . fun function apply, take single vector argument. groups factor defining elements list_of_df grouped.","code":""},{"path":"/reference/applyOverDFList.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply function over selected column in list of data frames — applyOverDFList","text":"matrix nrow(list_of_df[[1]]) rows nlevels(groups) columns.","code":""},{"path":"/reference/collapseInteractionMatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"collapseInteractionMatrix — collapseInteractionMatrix","title":"collapseInteractionMatrix — collapseInteractionMatrix","text":"collapseInteractionMatrix","code":""},{"path":"/reference/collapseInteractionMatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"collapseInteractionMatrix — collapseInteractionMatrix","text":"","code":"collapseInteractionMatrix(   mat,   meta,   cl,   alpha = 0.5,   purity_feature = \"tf\",   min_pruning_purity = 0.5 )"},{"path":"/reference/collapseInteractionMatrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"collapseInteractionMatrix — collapseInteractionMatrix","text":"pruning_purity purity > pruning_purity prune","code":""},{"path":"/reference/design2factor.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform design matrix to factor — design2factor","title":"Transform design matrix to factor — design2factor","text":"Transform design matrix factor","code":""},{"path":"/reference/design2factor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform design matrix to factor — design2factor","text":"","code":"design2factor(design)"},{"path":"/reference/design2factor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform design matrix to factor — design2factor","text":"design design matrix","code":""},{"path":"/reference/design2factor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform design matrix to factor — design2factor","text":"factor","code":""},{"path":"/reference/design2factor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transform design matrix to factor — design2factor","text":"","code":"if (FALSE) { design <- matrix(data = c(1, 1, 0, 0, 0, 0, 1, 1),                  nrow = 4,                  ncol = 2,                  dimnames = list(c(paste(\"sample\", 1:4)), c(\"gr1\", \"gr2\"))) design2factor(design) }"},{"path":"/reference/estimateStat.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate a goodness of fit stat — estimateStat","title":"Estimate a goodness of fit stat — estimateStat","text":"Estimate goodness fit stat","code":""},{"path":"/reference/estimateStat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate a goodness of fit stat — estimateStat","text":"","code":"estimateStat(x, y, u, s, method = \"cv\", nfold = 10, statistic = R2, alpha = 0)"},{"path":"/reference/filterSignatures.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter signatures by coverage — filterSignatures","title":"Filter signatures by coverage — filterSignatures","text":"Filter signatures overlapping low high number promoters. Useful get rid signatures low variance.","code":""},{"path":"/reference/filterSignatures.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter signatures by coverage — filterSignatures","text":"","code":"filterSignatures(   mae,   min = 0.05,   max = 0.95,   ref_experiment = \"Y\",   omit_experiments = c(\"Y\", \"U\") )"},{"path":"/reference/filterSignatures.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter signatures by coverage — filterSignatures","text":"mae MultiAssayExperiment object. min length one numeric 0 1 defining minimum promoter coverage signature pass filtering. max length one numeric 0 1 defining maximum promoter coverage signature pass filtering. ref_experiment string giving name experiment use inferring total number promoters. omit_experiments character giving names experiments exclude filtering.","code":""},{"path":"/reference/filterSignatures.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter signatures by coverage — filterSignatures","text":"MultiAssayExperiment object selected experiments filtered.","code":""},{"path":"/reference/filterSignatures.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filter signatures by coverage — filterSignatures","text":"","code":"base_lvl <- \"00hr\" design <- matrix(   data = c(1, 0, 0,            1, 0, 0,            1, 0, 0,            0, 1, 0,            0, 1, 0,            0, 1, 0,            0, 0, 1,            0, 0, 1,            0, 0, 1),   ncol = 3,   nrow = 9,   byrow = TRUE,   dimnames = list(colnames(rinderpest_mini), c(\"00hr\", \"12hr\", \"24hr\"))) mae <- prepareCountsForRegression(   counts = rinderpest_mini,   design = design,   base_lvl = base_lvl) mae <- addSignatures(mae, remap = remap_mini) mae <- filterSignatures(mae)"},{"path":"/reference/fisherMethod.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine p-values using Fisher method — fisherMethod","title":"Combine p-values using Fisher method — fisherMethod","text":"Fisher's method meta-analysis technique used combine results independent statistical tests hypothesis (Wikipedia article).","code":""},{"path":"/reference/fisherMethod.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine p-values using Fisher method — fisherMethod","text":"","code":"fisherMethod(p.value, lower.tail = FALSE, log.p = TRUE)"},{"path":"/reference/fisherMethod.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine p-values using Fisher method — fisherMethod","text":"p.value numeric vector p-values combine. lower.tail logical; TRUE (default), probabilities     \\(P[X \\le x]\\), otherwise, \\(P[X > x]\\). log.p logical; TRUE, probabilities p given log(p).","code":""},{"path":"/reference/fisherMethod.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine p-values using Fisher method — fisherMethod","text":"number giving combined p-value.","code":""},{"path":"/reference/getCoverage.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate regions coverage — getCoverage","title":"Calculate regions coverage — getCoverage","text":"getCoverage calculates coverage regions (rows interaction matrix) features (columns). possible specify features grouping variable gr coverage tells many distinct groups region overlap .","code":""},{"path":"/reference/getCoverage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate regions coverage — getCoverage","text":"","code":"getCoverage(mat, gr)"},{"path":"/reference/getCoverage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate regions coverage — getCoverage","text":"mat dgCMatrix interaction matrix produced getInteractionMatrix. gr factor specifying features groups. Must length equal number columns mat.","code":""},{"path":"/reference/getCoverage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate regions coverage — getCoverage","text":"Numeric vector.","code":""},{"path":"/reference/getInteractionMatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute interaction matrix — getInteractionMatrix","title":"Compute interaction matrix — getInteractionMatrix","text":"getInteractionMatrix construct interaction matrix two Granges objects. Names object became row names names b column names.","code":""},{"path":"/reference/getInteractionMatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute interaction matrix — getInteractionMatrix","text":"","code":"getInteractionMatrix(a, b, ext = 500, count = FALSE)"},{"path":"/reference/getInteractionMatrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute interaction matrix — getInteractionMatrix","text":"GRanges object. b GRanges object. ext Integer specifying number base pairs coordinates extended upstream downstream directions. count Logical indicating matrix hold number overlaps b FALSE presence / absence indicators.","code":""},{"path":"/reference/getInteractionMatrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute interaction matrix — getInteractionMatrix","text":"Sparse matrix class dgCMatrix, rows corresponding columns b. cell holds number indicating many times b overlapped.","code":""},{"path":"/reference/getInteractionMatrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute interaction matrix — getInteractionMatrix","text":"","code":"a <- GenomicRanges::GRanges(   seqnames = c(\"chr20\", \"chr4\"),   ranges = IRanges::IRanges(     start = c(62475984L, 173530220L),     end = c(62476001L, 173530236L)),   strand = c(\"-\", \"-\"),   name = c(\"hg19::chr20:61051039..61051057,-;hg_188273.1\",            \"hg19::chr4:174451370..174451387,-;hg_54881.1\")) b <- GenomicRanges::GRanges(   seqnames = c(\"chr4\", \"chr20\"),   ranges = IRanges::IRanges(     start = c(173530229L, 63864270L),     end = c(173530236L, 63864273L)),   strand = c(\"-\", \"-\"),   name = c(\"HAND2\", \"GATA5\")) getInteractionMatrix(a, b) #> 2 x 2 sparse Matrix of class \"dgCMatrix\" #>                                              HAND2 GATA5 #> hg19::chr20:61051039..61051057,-;hg_188273.1     .     . #> hg19::chr4:174451370..174451387,-;hg_54881.1     1     ."},{"path":"/reference/intersectGR.html","id":null,"dir":"Reference","previous_headings":"","what":"Intersect GRanges objects — intersectGR","title":"Intersect GRanges objects — intersectGR","text":"intersectGR intersect two GRanges objects return ranges overlapped ranges b.","code":""},{"path":"/reference/intersectGR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Intersect GRanges objects — intersectGR","text":"","code":"intersectGR(a, b, ...)"},{"path":"/reference/intersectGR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Intersect GRanges objects — intersectGR","text":"GRanges object. b GRanges object. ... arguments internally passed findOverlaps.","code":""},{"path":"/reference/intersectGR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Intersect GRanges objects — intersectGR","text":"GRanges object subset .","code":""},{"path":"/reference/isTRUEorFALSE.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if argument is a binary flag — isTRUEorFALSE","title":"Check if argument is a binary flag — isTRUEorFALSE","text":"Check argument binary flag","code":""},{"path":"/reference/isTRUEorFALSE.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if argument is a binary flag — isTRUEorFALSE","text":"","code":"isTRUEorFALSE(x)"},{"path":"/reference/isTRUEorFALSE.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if argument is a binary flag — isTRUEorFALSE","text":"x object test","code":""},{"path":"/reference/isTRUEorFALSE.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if argument is a binary flag — isTRUEorFALSE","text":"binary flag","code":""},{"path":"/reference/makeClusterName.html","id":null,"dir":"Reference","previous_headings":"","what":"Make cluster name based on metadata — makeClusterName","title":"Make cluster name based on metadata — makeClusterName","text":"Make cluster name based metadata","code":""},{"path":"/reference/makeClusterName.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make cluster name based on metadata — makeClusterName","text":"","code":"makeClusterName(   meta,   columns = c(\"tf\", \"biotype\", \"study\", \"tf_dbd\"),   mixed_th = 0.5 )"},{"path":"/reference/makeClusterName2.html","id":null,"dir":"Reference","previous_headings":"","what":"Make cluster name based on metadata ver. 2 — makeClusterName2","title":"Make cluster name based on metadata ver. 2 — makeClusterName2","text":"Make cluster name based metadata ver. 2","code":""},{"path":"/reference/makeClusterName2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make cluster name based on metadata ver. 2 — makeClusterName2","text":"","code":"makeClusterName2(   meta,   columns = c(\"tf\", \"biotype\", \"study\", \"tf_dbd\"),   inclusion_th = 0.25,   mixed_th = 0.5 )"},{"path":"/reference/modelGeneExpression.html","id":null,"dir":"Reference","previous_headings":"","what":"Gene expression modeling pipeline — modelGeneExpression","title":"Gene expression modeling pipeline — modelGeneExpression","text":"modelGeneExpression uses parallelization parallel backend registered. reason advise agains passing parallel argument internally called cv.glmnet routine.","code":""},{"path":"/reference/modelGeneExpression.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gene expression modeling pipeline — modelGeneExpression","text":"","code":"modelGeneExpression(   mae,   yname = \"Y\",   uname = \"U\",   xnames,   design = NULL,   standardize = TRUE,   parallel = FALSE,   pvalues = TRUE,   precalcmodels = NULL,   ... )"},{"path":"/reference/modelGeneExpression.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gene expression modeling pipeline — modelGeneExpression","text":"mae MultiAssayExperiment object produced prepareCountsForRegression. yname string indicating experiment mae use expression input. uname string indicating experiment mae use basal expression level. xnames character indicating experiments mae use molecular signatures. design matrix giving design matrix samples. Default (NULL) use design found mae metadata. Columns corresponds samples groups rows samples names. samples included design processed. standardize logical flag indicating molecular signatures scaled. Advised set TRUE. parallel parallel argument internally used cv.glmnet function. Advised set FALSE might interfere parallelization used modelGeneExpression. pvalues logical flag indicating significance testing estimated molecular signatures activities performed. precalcmodels optional list precomputed 'cv.glmnet' objects molecular signature sample. elements list matching xnames vector. elements named list holding 'cv.glmnet' objects sample. provided models used instead running regression scratch. ... arguments passed glmnet::cv.glmnet.","code":""},{"path":"/reference/modelGeneExpression.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gene expression modeling pipeline — modelGeneExpression","text":"Nested list following elements regression_models Named list elements corresponding signatures specified xnames. list holding 'cv.glmnet' objects corresponding sample. pvalues Named list elements corresponding signatures specified xnames. list holding data.frame signature's p-values test statistics estimated sample. replicate_avg Named list elements corresponding signatures specified xnames. matrix holding replicate average Z-scores columns corresponding groups design.","code":""},{"path":"/reference/modelGeneExpression.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Gene expression modeling pipeline — modelGeneExpression","text":"speeding calculations consider lowering number folds used internally run cv.glmnet specifying nfolds argument. default 10 fold cross validation used. relationship expression (Y) molecular signatures (X) described using linear model formulation. pipeline attempts model change expression basal expression level (u) sample, goal finding unknown molecular signatures activities. Linear models fit using popular ridge regression implementation glmnet (Friedman, Hastie, Tibshirani 2010). pvalues set TRUE significance estimated molecular signatures activities tested using methodology introduced (Cule, Vineis, De Iorio 2011) original implementation can found ridge-package. replicates available signatures activities estimates standard error estimates can combined. done averaging signatures activities estimates pooling standard errors following (Cohen 1977) formulation pooled standard deviation. detailed pipeline description refer interested user paper accompanying package.","code":""},{"path":[]},{"path":"/reference/mostFreqValue.html","id":null,"dir":"Reference","previous_headings":"","what":"Get most frequent value — mostFreqValue","title":"Get most frequent value — mostFreqValue","text":"Get frequent value","code":""},{"path":"/reference/mostFreqValue.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get most frequent value — mostFreqValue","text":"","code":"mostFreqValue(vec)"},{"path":"/reference/paintVector.html","id":null,"dir":"Reference","previous_headings":"","what":"Paint vector — paintVector","title":"Paint vector — paintVector","text":"Get colors along vector","code":""},{"path":"/reference/paintVector.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Paint vector — paintVector","text":"","code":"paintVector(vec)"},{"path":"/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"re-export magrittr pipe operator — %>%","title":"re-export magrittr pipe operator — %>%","text":"re-export magrittr pipe operator","code":""},{"path":"/reference/plotExperimentsHeatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Experiment's heatmap — plotExperimentsHeatmap","title":"Experiment's heatmap — plotExperimentsHeatmap","text":"plotExperimentsHeatmap crate heatmap group o experiments (columns) based interaction matrix. function use sparsity aware methods distance calculation advised use large matrices. qualitative_hcl color palette used allow higer number categories annotation. scaling applied mat!","code":""},{"path":"/reference/plotExperimentsHeatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Experiment's heatmap — plotExperimentsHeatmap","text":"","code":"plotExperimentsHeatmap(   mat,   meta,   cluster_rows = TRUE,   cluster_cols = TRUE,   angle_col = 45,   treeheight_col = 0,   fontsize = 8,   fontsize_row = 7,   fontsize_col = 7,   ... )"},{"path":"/reference/plotExperimentsHeatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Experiment's heatmap — plotExperimentsHeatmap","text":"mat Numeric matrix pairwise correlations plotted. meta data.table metadata associated mat. contain id column, used subset mat. character columns used heatmap annotations. cluster_rows boolean values determining rows clustered hclust object, cluster_cols boolean values determining columns clustered hclust object. angle_col angle column labels, right now one can choose  predefined options (0, 45, 90, 270 315) treeheight_col height tree columns, clustered.  Default value 50 points. fontsize base fontsize plot fontsize_row fontsize rownames (Default: fontsize) fontsize_col fontsize colnames (Default: fontsize) ... arguments passed pheatmap function.","code":""},{"path":"/reference/plotExperimentsHeatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Experiment's heatmap — plotExperimentsHeatmap","text":"Invisibly pheatmap object. See pheatmap informations.","code":""},{"path":"/reference/plotHeatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Heatmap — plotHeatmap","title":"Heatmap — plotHeatmap","text":"Heatmap","code":""},{"path":"/reference/plotHeatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Heatmap — plotHeatmap","text":"","code":"plotHeatmap(   x,   breaks,   col = rdBuPalette(length(breaks) - 1),   rownames = TRUE,   colnames = TRUE,   clust_rows = TRUE,   na.color = \"grey\",   mar = c(6.1, 0.1, 4.1, 22.1),   cex = 1,   cex.main = 0.9,   cex.axis = 0.8,   ... )"},{"path":"/reference/plotHeatmapScaleBar.html","id":null,"dir":"Reference","previous_headings":"","what":"Scale bar to use with heatmaps — plotHeatmapScaleBar","title":"Scale bar to use with heatmaps — plotHeatmapScaleBar","text":"Scale bar use heatmaps","code":""},{"path":"/reference/plotHeatmapScaleBar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scale bar to use with heatmaps — plotHeatmapScaleBar","text":"","code":"plotHeatmapScaleBar(   breaks,   col = rdBuPalette(length(breaks) - 1),   side = 2,   nticks = 3,   mar = c(2.1, 3.1, 4.1, 1.1),   cex = 0.75,   cex.main = 0.9,   ... )"},{"path":"/reference/plotHistogram.html","id":null,"dir":"Reference","previous_headings":"","what":"Histogram with summary — plotHistogram","title":"Histogram with summary — plotHistogram","text":"plotHistogram create histogram summary upper margin. Refer hist documentation informations.","code":""},{"path":"/reference/plotHistogram.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Histogram with summary — plotHistogram","text":"","code":"plotHistogram(x, breaks = 40, cex = 0.7, xlab = \"\", ...)"},{"path":"/reference/plotHistogram.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Histogram with summary — plotHistogram","text":"x vector values histogram desired. breaks one : vector giving breakpoints histogram cells, function compute vector breakpoints, single number giving number cells histogram, character string naming algorithm compute       number cells (see ‘Details’), function compute number cells. last three cases number suggestion ;     breakpoints set pretty values, number     limited 1e6 (warning larger).      breaks function, x vector supplied     argument (number breaks limited     amount available memory). xlab main title axis labels: arguments     title() get “smart” defaults , e.g., default     ylab \"Frequency\" iff freq true. ... arguments graphical parameters passed     plot.histogram thence title     axis (plot = TRUE).","code":""},{"path":"/reference/plotHistogram.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Histogram with summary — plotHistogram","text":"object class \"histogram\".","code":""},{"path":"/reference/plotSubtree.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot subtree — plotSubtree","title":"Plot subtree — plotSubtree","text":"Plot subtree","code":""},{"path":"/reference/plotSubtree.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot subtree — plotSubtree","text":"","code":"plotSubtree(hc, meta, j)"},{"path":"/reference/plotTitle.html","id":null,"dir":"Reference","previous_headings":"","what":"plot title — plotTitle","title":"plot title — plotTitle","text":"plot title","code":""},{"path":"/reference/plotTitle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot title — plotTitle","text":"","code":"plotTitle(labels, mar = c(0.1, 1.1, 0.1, 1.1))"},{"path":"/reference/poolSE.html","id":null,"dir":"Reference","previous_headings":"","what":"Pool Standard Error / Standard Deviation — poolSE","title":"Pool Standard Error / Standard Deviation — poolSE","text":"Pooled standard erro calculated following (Cohen 1977) formulation pooled standard deviation. TODO check https://www.statisticshowto.com/find-pooled-sample-standard-error/, https://www.statisticshowto.com/pooled-standard-deviation/","code":""},{"path":"/reference/poolSE.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pool Standard Error / Standard Deviation — poolSE","text":"","code":"poolSE(x)"},{"path":"/reference/poolSE.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pool Standard Error / Standard Deviation — poolSE","text":"x Numeric vector standard errors pool.","code":""},{"path":"/reference/poolSE.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pool Standard Error / Standard Deviation — poolSE","text":"Number giving pooled standard error.","code":""},{"path":"/reference/prepareCountsForRegression.html","id":null,"dir":"Reference","previous_headings":"","what":"Process count matrix for expression modeling — prepareCountsForRegression","title":"Process count matrix for expression modeling — prepareCountsForRegression","text":"Expression counts processed using edgeR following User's Guide. Shortly, counts sample filtered lowly expressed promoters, normalized library size transformed counts per million (CPM). Optionally, CPM log2 transformed addition pseudo count. Basal level expression calculated averaging base_lvl samples expression values.","code":""},{"path":"/reference/prepareCountsForRegression.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process count matrix for expression modeling — prepareCountsForRegression","text":"","code":"prepareCountsForRegression(   counts,   design,   base_lvl,   log2 = TRUE,   pseudo_count = 1L,   drop_base_lvl = TRUE )"},{"path":"/reference/prepareCountsForRegression.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process count matrix for expression modeling — prepareCountsForRegression","text":"counts matrix read counts. design matrix giving design matrix samples. Columns corresponds samples groups rows samples names. base_lvl string indicating group design corresponding basal expression level. reference samples expression change compared. log2 logical flag indicating counts log2(counts per million) returned. pseudo_count integer count added taking log2. drop_base_lvl logical flag indicating base_lvl samples dropped resulting MultiAssayExperiment object.","code":""},{"path":"/reference/prepareCountsForRegression.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process count matrix for expression modeling — prepareCountsForRegression","text":"MultiAssayExperiment object two experiments: U matrix giving expression values averaged basal level samples Y matrix expression values design base_lvl dropped stored metadata directly available modelGeneExpression.","code":""},{"path":"/reference/prepareCountsForRegression.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Process count matrix for expression modeling — prepareCountsForRegression","text":"","code":"base_lvl <- \"00hr\" design <- matrix(   data = c(1, 0, 0,            1, 0, 0,            1, 0, 0,            0, 1, 0,            0, 1, 0,            0, 1, 0,            0, 0, 1,            0, 0, 1,            0, 0, 1),   ncol = 3,   nrow = 9,   byrow = TRUE,   dimnames = list(colnames(rinderpest_mini), c(\"00hr\", \"12hr\", \"24hr\"))) mae <- prepareCountsForRegression(   counts = rinderpest_mini,   design = design,   base_lvl = base_lvl)"},{"path":"/reference/pruneClusterMeta.html","id":null,"dir":"Reference","previous_headings":"","what":"Prune metadata — pruneClusterMeta","title":"Prune metadata — pruneClusterMeta","text":"Prunes metadata based selected column entries frequent items remains.","code":""},{"path":"/reference/pruneClusterMeta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prune metadata — pruneClusterMeta","text":"","code":"pruneClusterMeta(meta, col)"},{"path":"/reference/pruneClusterMeta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prune metadata — pruneClusterMeta","text":"col pruning column","code":""},{"path":"/reference/rdBuPalette.html","id":null,"dir":"Reference","previous_headings":"","what":"Customized color pallette — rdBuPalette","title":"Customized color pallette — rdBuPalette","text":"Customized color pallette","code":""},{"path":"/reference/rdBuPalette.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Customized color pallette — rdBuPalette","text":"","code":"rdBuPalette(n)"},{"path":"/reference/remap_mini.html","id":null,"dir":"Reference","previous_headings":"","what":"xcore example molecular signatures — remap_mini","title":"xcore example molecular signatures — remap_mini","text":"Molecular signatures data intended use xcore vignette examples. build ReMap2020 molecular signatures constructed FANTOM5 annotation, can found xcoredata package. data subset limited core promoters (promoters_f5_core) randomly selected 600 signatures.","code":""},{"path":"/reference/remap_mini.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"xcore example molecular signatures — remap_mini","text":"","code":"remap_mini"},{"path":"/reference/remap_mini.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"xcore example molecular signatures — remap_mini","text":"dgCMatrix 14191 rows 600 columns holding interaction matrix subset ReMap2020 molecular signatures FANTOM5 annotation. Rows corresponds FANTOM5 promoters columns signatures.","code":""},{"path":"/reference/repAvgZscore.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate replicate averaged Z-scores — repAvgZscore","title":"Calculate replicate averaged Z-scores — repAvgZscore","text":"Replicate averaged Z-scores calculated dividing replicate average coefficient replicate pooled standard error.","code":""},{"path":"/reference/repAvgZscore.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate replicate averaged Z-scores — repAvgZscore","text":"","code":"repAvgZscore(pvalues, groups)"},{"path":"/reference/repAvgZscore.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate replicate averaged Z-scores — repAvgZscore","text":"pvalues Data frame 'se' (standard error) 'coef' (coefficient) columns. pvalues output modelGeneExpression . groups Factor giving group membership samples  pvalues.","code":""},{"path":"/reference/repAvgZscore.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate replicate averaged Z-scores — repAvgZscore","text":"Numeric matrix averaged Z-scores. Columns correspond groups rows predictors.","code":""},{"path":"/reference/ridgePvals.html","id":null,"dir":"Reference","previous_headings":"","what":"Significance testing in linear ridge regression — ridgePvals","title":"Significance testing in linear ridge regression — ridgePvals","text":"Standard error estimation significance testing coefficients estimated linear ridge regression. ridgePvals re-implement original method (Cule et al. BMC Bioinformatics 2011.) found ridge-package. function intended use runLinearRidge output.","code":""},{"path":"/reference/ridgePvals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Significance testing in linear ridge regression — ridgePvals","text":"","code":"ridgePvals(x, y, beta, lambda, standardizex = TRUE, svdX = NULL)"},{"path":"/reference/ridgePvals.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Significance testing in linear ridge regression — ridgePvals","text":"x input matrix, used runLinearRidge. y response variable, used runLinearRidge. beta matrix coefficients, estimated using runLinearRidge. lambda lambda value beta estimated. standardizex logical flag x variable standardization, set value standarize flag runLinearRidge. svdX optional singular-value decomposition x matrix. One can obtained using link[base]{svd}. Passing argument omits internal call link[base]{svd}, useful calling ridgePvals repeatedly using x.","code":""},{"path":"/reference/ridgePvals.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Significance testing in linear ridge regression — ridgePvals","text":"data.frame columns coef beta's names se beta's standard errors tstat beta's test statistic pval beta's p-values","code":""},{"path":"/reference/rinderpest_mini.html","id":null,"dir":"Reference","previous_headings":"","what":"xcore example expression data — rinderpest_mini","title":"xcore example expression data — rinderpest_mini","text":"Expression data intended use xcore vignette examples. build FANTOM5's 293SLAM rinderpest infection time course dataset. data subset limited core promoters (promoters_f5_core).","code":""},{"path":"/reference/rinderpest_mini.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"xcore example expression data — rinderpest_mini","text":"","code":"rinderpest_mini"},{"path":"/reference/rinderpest_mini.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"xcore example expression data — rinderpest_mini","text":"matrix 14191 rows 6 columns holding expression counts CAGE-seq experiment. Rows corresponds FANTOM5 promoters columns time points expression measured 0 24 hours post infection.","code":""},{"path":"/reference/runLinearRidge.html","id":null,"dir":"Reference","previous_headings":"","what":"Linear ridge regression — runLinearRidge","title":"Linear ridge regression — runLinearRidge","text":"Wrapper around cv.glmnet run linear ridge regression lambda selection using cross-validation.","code":""},{"path":"/reference/runLinearRidge.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Linear ridge regression — runLinearRidge","text":"","code":"runLinearRidge(x, y, offset, alpha = 0, standardize = TRUE, ...)"},{"path":"/reference/runLinearRidge.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Linear ridge regression — runLinearRidge","text":"x x matrix glmnet. y response y glmnet. offset Offset vector (matrix) glmnet alpha elasticnet mixing parameter, \\(0\\le\\alpha\\le 1\\). penalty defined $$(1-\\alpha)/2||\\beta||_2^2+\\alpha||\\beta||_1.$$ alpha=1 lasso penalty, alpha=0 ridge penalty. standardize Logical flag x variable standardization, prior fitting model sequence. coefficients always returned original scale. Default standardize=TRUE.  variables units already, might wish standardize. See details y standardization family=\"gaussian\". ... arguments can passed glmnet","code":""},{"path":"/reference/runLinearRidge.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Linear ridge regression — runLinearRidge","text":"object class \"cv.glmnet\" returned. See cv.glmnet details.","code":""},{"path":"/reference/selectParams4dynamicTreeCut.html","id":null,"dir":"Reference","previous_headings":"","what":"Select cutHeight and deepSplit parameters for dynamicTreeCut — selectParams4dynamicTreeCut","title":"Select cutHeight and deepSplit parameters for dynamicTreeCut — selectParams4dynamicTreeCut","text":"Select cutHeight deepSplit parameters dynamicTreeCut","code":""},{"path":"/reference/selectParams4dynamicTreeCut.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select cutHeight and deepSplit parameters for dynamicTreeCut — selectParams4dynamicTreeCut","text":"","code":"selectParams4dynamicTreeCut(   dendro,   distM,   ref_cl,   minClusterSize = 3,   c_deepSplit = 1:4,   c_cutHeight = seq(from = 0.5, to = 6, by = 0.2) )"},{"path":"/reference/simplifyInteractionMatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Simplify Interaction Matrix — simplifyInteractionMatrix","title":"Simplify Interaction Matrix — simplifyInteractionMatrix","text":"Simplify Interaction Matrix","code":""},{"path":"/reference/simplifyInteractionMatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simplify Interaction Matrix — simplifyInteractionMatrix","text":"","code":"simplifyInteractionMatrix(mat, alpha = 0.5, colname = NA)"},{"path":"/reference/simplifyInteractionMatrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simplify Interaction Matrix — simplifyInteractionMatrix","text":"mat dgCMatrix interaction matrix produced getInteractionMatrix. alpha Number 0 1 specifying voting threshold. Eg. 3 column matrix alpha 0.5 give voting criteria >= 2.","code":""},{"path":"/reference/simplifyInteractionMatrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simplify Interaction Matrix — simplifyInteractionMatrix","text":"dgCMatrix","code":""},{"path":"/reference/summaryString.html","id":null,"dir":"Reference","previous_headings":"","what":"Object Summary as a string — summaryString","title":"Object Summary as a string — summaryString","text":"Return object summary string can placed plot.","code":""},{"path":"/reference/summaryString.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Object Summary as a string — summaryString","text":"","code":"summaryString(...)"},{"path":"/reference/summaryString.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Object Summary as a string — summaryString","text":"... arguments passed summary.","code":""},{"path":"/reference/summaryString.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Object Summary as a string — summaryString","text":"String.","code":""},{"path":"/reference/tau.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Tau — tau","title":"Calculate Tau — tau","text":"tau calculate Tau tissue-specificity metric. $$\\tau = \\frac{\\sum_{=1}^{n} (1-\\hat{x_i})}{n-1}; \\hat{x_i} = \\frac{x_i}{max(x)}$$ Reference.","code":""},{"path":"/reference/tau.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Tau — tau","text":"","code":"tau(x)"},{"path":"/reference/tau.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Tau — tau","text":"x Numeric vector giving expression one gene different tissues.","code":""},{"path":"/reference/tau.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Tau — tau","text":"Tau tissue-specificity metric.","code":""},{"path":"/reference/vectorPurity.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate vector purity — vectorPurity","title":"Calculate vector purity — vectorPurity","text":"Calculate vector purity","code":""},{"path":"/reference/vectorPurity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate vector purity — vectorPurity","text":"","code":"vectorPurity(x)"}]
